#!/bin/bash

echo
echo " ____    _____      _      ____    _____ "
echo "/ ___|  |_   _|    / \    |  _ \  |_   _|"
echo "\___ \    | |     / _ \   | |_) |   | |  "
echo " ___) |   | |    / ___ \  |  _ <    | |  "
echo "|____/    |_|   /_/   \_\ |_| \_\   |_|  "
echo
echo "Build your first network (BYFN) end-to-end test"
echo


CHANNEL_NAME="$1"
DELAY="$2"
: ${CHANNEL_NAME:="mychannel"}
: ${TIMEOUT:="60"}
: ${DELAY:="3"}
COUNTER=1
MAX_RETRY=5
ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem


echo "Channel name : "$CHANNEL_NAME


# verify the result of the end-to-end test
verifyResult () {
	if [ $1 -ne 0 ] ; then
		echo "!!!!!!!!!!!!!!! "$2" !!!!!!!!!!!!!!!!"
    echo "========= ERROR !!! FAILED to execute End-2-End Scenario ==========="
		echo
   	exit 1
	fi
}


setGlobals () {

	if [ $1 -eq 0 -o $1 -eq 1 ] ; then
		CORE_PEER_LOCALMSPID="Org1MSP"
		CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
		CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
		if [ $1 -eq 0 ]; then
			CORE_PEER_ADDRESS=peer0.org1.example.com:7051
		else
			CORE_PEER_ADDRESS=peer1.org1.example.com:7051
			CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
		fi
		elif [ $1 -eq 2 -o $1 -eq 3 ] ; then
			CORE_PEER_LOCALMSPID="Org2MSP"
			CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
			CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
		if [ $1 -eq 2 ]; then
			CORE_PEER_ADDRESS=peer0.org2.example.com:7051
		else
			CORE_PEER_ADDRESS=peer1.org2.example.com:7051
		fi
  else
    CORE_PEER_LOCALMSPID="Org3MSP"
		CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt
		CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp
		CORE_PEER_ADDRESS=peer0.org3.example.com:7051
	fi

	env |grep CORE
}


createChannel() {
	setGlobals 0

  if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
		peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx >&log.txt
	else
		peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA >&log.txt
	fi
	res=$?
	cat log.txt
	verifyResult $res "Channel creation failed"
	echo "===================== Channel \"$CHANNEL_NAME\" is created successfully ===================== "
	echo
}


updateAnchorPeers() {
  PEER=$1
  setGlobals $PEER

  if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
		peer channel update -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/${CORE_PEER_LOCALMSPID}anchors.tx >&log.txt
	else
		peer channel update -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/${CORE_PEER_LOCALMSPID}anchors.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA >&log.txt
	fi
	res=$?
	cat log.txt
	verifyResult $res "Anchor peer update failed"
	echo "===================== Anchor peers for org \"$CORE_PEER_LOCALMSPID\" on \"$CHANNEL_NAME\" is updated successfully ===================== "
	sleep $DELAY
	echo
}


## Sometimes Join takes time hence RETRY atleast for 5 times
joinWithRetry () {
	peer channel join -b $CHANNEL_NAME.block  >&log.txt
	res=$?
	cat log.txt
	if [ $res -ne 0 -a $COUNTER -lt $MAX_RETRY ]; then
		COUNTER=` expr $COUNTER + 1`
		echo "PEER$1 failed to join the channel, Retry after 2 seconds"
		sleep $DELAY
		joinWithRetry $1
	else
		COUNTER=1
	fi
  verifyResult $res "After $MAX_RETRY attempts, PEER$ch has failed to Join the Channel"
}


joinChannel () {
	for ch in 0 1 2 3 4; do
		setGlobals $ch
		joinWithRetry $ch
		echo "===================== PEER$ch joined on the channel \"$CHANNEL_NAME\" ===================== "
		sleep $DELAY
		echo
	done
}


installChaincode () {
	PEER=$1
	setGlobals $PEER
	CHAINCODE_NAME=$2
	CHAINCODE=$3
	peer chaincode install -n $CHAINCODE_NAME -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/$CHAINCODE >&log.txt
	res=$?
	cat log.txt
  verifyResult $res "Chaincode installation on remote peer PEER$PEER has Failed"
	echo "===================== Chaincode is installed on remote peer PEER$PEER ===================== "
	echo
}


instantiateChaincode () {
	PEER=$1
	setGlobals $PEER
	CHAINCODE_NAME=$2
	PARAMETER=$3
	# while 'peer chaincode' command can get the orderer endpoint from the peer (if join was successful),
	# lets supply it directly as we know it using the "-o" option
	if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
		peer chaincode instantiate -o orderer.example.com:7050 -C $CHANNEL_NAME -n  $CHAINCODE_NAME -v 1.0 -c $PARAMETER -P "OR	('Org1MSP.member','Org2MSP.member')" >&log.txt
	else
		peer chaincode instantiate -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n $CHAINCODE_NAME -v 1.0 -c $PARAMETER -P "OR	('Org1MSP.member','Org2MSP.member')" >&log.txt
	fi
	res=$?
	cat log.txt
	verifyResult $res "Chaincode instantiation on PEER$PEER on channel '$CHANNEL_NAME' failed"
	echo "===================== Chaincode Instantiation on PEER$PEER on channel '$CHANNEL_NAME' is successful ===================== "
	echo
}


chaincodeInvoke () {
	PEER=$1
	setGlobals $PEER
	CHAINCODE_NAME=$2
	PARAMETER=$3

	if [ -z "$CORE_PEER_TLS_ENABLED" -o "$CORE_PEER_TLS_ENABLED" = "false" ]; then
		peer chaincode invoke -o orderer.example.com:7050 -C $CHANNEL_NAME -n  $CHAINCODE_NAME -v 1.0 -c $PARAMETER >&log.txt
	else
		peer chaincode invoke -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n $CHAINCODE_NAME -v 1.0 -c $PARAMETER >&log.txt
	fi
	res=$?
	cat log.txt
	verifyResult $res "Chaincode addTask on PEER$PEER on channel '$CHANNEL_NAME1' failed"
	echo "===================== Chaincode invoke on PEER$PEER on channel '$CHANNEL_NAME' is successful ===================== "
	echo
}


chaincodeQuery () {
	PEER=$1
	setGlobals $PEER
	CHAINCODE_NAME=$2
	PARAMETER=$3

	peer chaincode query -n $CHAINCODE_NAME  -v 0 -c $PARAMETER -C $CHANNEL_NAME

	res=$?
	cat log.txt
	verifyResult $res "Chaincode instantiation on PEER$PEER on channel '$CHANNEL_NAME' failed"
	echo "===================== Chaincode query on PEER$PEER on channel '$CHANNEL_NAME' is successful ===================== "
	echo
}



## Create channel
echo "Creating channel..."
createChannel

## Join all the peers to the channel
echo "Having all peers join the channel..."
joinChannel

## Set the anchor peers for each org in the channel
echo "Updating anchor peers for org1..."
updateAnchorPeers 0
echo "Updating anchor peers for org2..."
updateAnchorPeers 2
echo "Updating anchor peers for org3..."
updateAnchorPeers 4

## Install chaincode on peer0/org1
echo
echo "##########################################################"
echo "################## publish.go install ####################"
echo "##########################################################"
echo
PUBLISH_CHAINCODENAME=mycc
installChaincode 0 $PUBLISH_CHAINCODENAME publish1

## instantiate chaincode on peer0/org1
echo
echo "##########################################################"
echo "################ publish.go instantiate ##################"
echo "##########################################################"
echo
instantiateChaincode 0 $PUBLISH_CHAINCODENAME '{"Args":["Init"]}'

sleep 3

echo
echo "##########################################################"
echo "#################### generateTaskId ######################"
echo "##########################################################"
echo
PUBLISH_CHAINCODENAME=mycc
taskId=`peer chaincode query -n $PUBLISH_CHAINCODENAME  -v 0 -c '{"Args":["generateTaskId"]}' -C $CHANNEL_NAME | grep -o '[0-9]*[0-9]'`
echo task id is:$taskId
#chaincodeGetTaskId 0

echo
echo "##########################################################"
echo "######################### addTask ########################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $CHAINCODE_NAME1  -v 1.0 -c '{"Args":["addTask", "'${taskId}'", "collect_data", "000"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $PUBLISH_CHAINCODENAME '{"Args":["addTask","'${taskId}'","collect_data","000"]}'

sleep 3

echo
echo "##########################################################"
echo "######################## queryTask #######################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode query -n $CHAINCODE_NAME1  -v 1.0 -c '{"Args":["queryTask"]}' -C $CHANNEL_NAME
chaincodeQuery 0 $PUBLISH_CHAINCODENAME '{"Args":["queryTask"]}'


echo
echo "##########################################################"
echo "#################### task.go install #####################"
echo "##########################################################"
echo
installChaincode 0 $taskId task

echo
echo "##########################################################"
echo "################## task.go instantiate ###################"
echo "##########################################################"
echo
instantiateChaincode 0 $taskId '{"Args":["Init","'${taskId}'"]}'

sleep 3

echo
echo "##########################################################"
echo "###################### writeRequest ######################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeRequest", "1", "u1", "'${taskId}'", "0.31", "6.9", "12.7"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $taskId '{"Args":["writeRequest","1","u1","'${taskId}'","0.31","6.9","12.7"]}'

#echo
#echo "##########################################################"
#echo "################### writeRequestArray ####################"
#echo "##########################################################"
#echo
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeRequestArray","u1", "'${taskId}'", "0.5", "1.9", "7.3", "0.31", "6.9", "12.7"]}' -C $CHANNEL_NAME
#chaincodeWriteRequestArray 0 $taskId '{"Args":["writeRequestArray","u1","'${taskId}'","0.5","1.9","7.3","0.31","6.9","12.7"]}'

echo
echo "##########################################################"
echo "################### changeStateToWait ####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -n $taskId -v 1.0 -c '{"Args":["changeStateToWait", "'${taskId}'"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $taskId '{"Args":["changeStateToWait","'${taskId}'"]}'

sleep 3

echo
echo "##########################################################"
echo "####################### readRequest ######################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode query -n $taskId -c '{"Args":["readRequest", "1", "u1", "'${taskId}'"]}' -C $CHANNEL_NAME
chaincodeQuery 0 $taskId '{"Args":["readRequest","1","u1","'${taskId}'"]}'

echo
echo "##########################################################"
echo "##################### request query ######################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode query -n $taskId -c '{"Args":["queryByObjectType", "'${taskId}'", "request"]}' -C $CHANNEL_NAME
chaincodeQuery 0 $taskId '{"Args":["queryByObjectType","'${taskId}'","request"]}'

echo
echo "##########################################################"
echo "###################### writeResponse #####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeResponse", "1", "u1", "s1", "'${taskId}'", "0.32", "6.5", "7.0"]}' -C $CHANNEL_NAME

#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeResponse", "1", "u1", "s2", "'${taskId}'", "0.25", "7.2", "12.0"]}' -C $CHANNEL_NAME

#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeResponse", "2", "u1", "s3", "'${taskId}'", "0.25", "8.3", "7.2"]}' -C $CHANNEL_NAME

#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeResponse", "2", "u1", "s4", "'${taskId}'", "0.25", "9.5", "6.5"]}' -C $CHANNEL_NAME

#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeResponse", "2", "u1", "s5", "'${taskId}'", "0.25", "9.5", "6.0"]}' -C $CHANNEL_NAME

chaincodeInvoke 0 $taskId '{"Args":["writeResponse","1","u1","s1","'${taskId}'","0.32","6.5","7.0"]}'

sleep 3

echo "##########################################################"
echo "###################### readResponse ######################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode query -n $taskId -c '{"Args":["readResponse", "1", "u1", "s1", "'${taskId}'"]}' -C $CHANNEL_NAME
chaincodeQuery 0 $taskId '{"Args":["readResponse","1","u1","s1","'${taskId}'"]}'

echo
echo "##########################################################"
echo "##################### chaincode Check ####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -c '{"Args":["check", "'${taskId}'"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $taskId '{"Args":["check","'${taskId}'"]}'

sleep 3

echo
echo "##########################################################"
echo "####################### readState ########################"
echo "##########################################################"
echo
setGlobals 0
state=`peer chaincode query -n $taskId -c '{"Args":["readState", "'${taskId}'"]}' -C $CHANNEL_NAME`
echo state is:$state

if state="rejection"; then
echo
echo "##########################################################"
echo "##################### rewriteRequest #####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeRequest", "2", "u1", "'${taskId}'", "0.32", "7.0", "13.7"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $taskId '{"Args":["writeRequest","2","u1","'${taskId}'","0.32","7.0","13.7"]}'

echo
echo "##########################################################"
echo "################### changeStateToWait ####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -n $taskId -v 1.0 -c '{"Args":["changeStateToWait", "'${taskId}'"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $taskId '{"Args":["changeStateToWait","'${taskId}'"]}'

sleep 3

echo
echo "##########################################################"
echo "##################### rewriteResponse ####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -v 1.0 -c '{"Args":["writeResponse", "2", "u1", "s1", "'${taskId}'", "0.30", "8.5", "7.0"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $taskId '{"Args":["writeResponse","2","u1","s1","'${taskId}'","0.30","8.5","7.0"]}'

sleep 3

echo
echo "##########################################################"
echo "################### recheck chaincode ####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode invoke -o orderer.example.com:7050  --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -n $taskId -c '{"Args":["check", "'${taskId}'"]}' -C $CHANNEL_NAME
chaincodeInvoke 0 $taskId '{"Args":["check","'${taskId}'"]}'

sleep 3

echo
echo "##########################################################"
echo "####################### readState ########################"
echo "##########################################################"
echo
setGlobals 0
state=`peer chaincode query -n $taskId -c '{"Args":["readState", "'${taskId}'"]}' -C $CHANNEL_NAME`
echo state is:$state

fi

echo
echo "##########################################################"
echo "##################### agreement query ####################"
echo "##########################################################"
echo
#setGlobals 0
#peer chaincode query -n $taskId -c '{"Args":["queryByObjectType", "'${taskId}'", "agreement"]}' -C $CHANNEL_NAME
chaincodeQuery 0 $taskId '{"Args":["queryByObjectType","'${taskId}'","agreement"]}'


echo
echo "========= All GOOD, BYFN execution completed =========== "
echo

echo
echo " _____   _   _   ____   "
echo "| ____| | \ | | |  _ \  "
echo "|  _|   |  \| | | | | | "
echo "| |___  | |\  | | |_| | "
echo "|_____| |_| \_| |____/  "
echo

exit 0
